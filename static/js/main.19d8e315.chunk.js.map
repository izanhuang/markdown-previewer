{"version":3,"sources":["logo.svg","Markdown.js","App.js","reportWebVitals.js","index.js"],"names":["Markdown","props","state","input","placeholder","display","handleChange","bind","toggleDisplay","getMarkdownText","event","this","setState","target","value","rawMarkup","marked","sanitize","setOptions","breaks","__html","id","for","className","icon","faWindowMinimize","onClick","faWindowMaximize","type","onChange","name","dangerouslySetInnerHTML","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAAe,I,iFCKMA,E,kDACjB,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,MAAOC,EACPC,SAAS,GAEb,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBACrB,EAAKE,gBAAkB,EAAKA,gBAAgBF,KAArB,gBART,E,gDAUlB,SAAaG,GACTC,KAAKC,SAAS,CACVT,MAAOO,EAAMG,OAAOC,U,2BAG5B,WACIH,KAAKC,UAAS,SAAAV,GAAK,MAAK,CACpBG,SAAUH,EAAMG,c,6BAGxB,WACI,IAAIU,EAAYC,IAAOL,KAAKT,MAAMC,MAAO,CAACc,UAAU,IAIpD,OAHAD,IAAOE,WAAW,CACdC,QAAQ,IAEL,CAAEC,OAAQL,K,oBAErB,WACI,OACI,sBAAKM,GAAG,eAAR,UACI,sBAAKA,GAAG,aAAR,UACI,wBAAOC,IAAI,SAAX,4BAESX,KAAKT,MAAMG,QACZ,cAAC,IAAD,CAAiBkB,UAAU,OAAOC,KAAMC,IAAmBC,QAASf,KAAKH,gBACvE,cAAC,IAAD,CAAiBe,UAAU,OAAOC,KAAMG,IAAmBD,QAASf,KAAKH,mBAGlFG,KAAKT,MAAMG,SAAW,0BAAUuB,KAAK,OAAOd,MAAOH,KAAKT,MAAMC,MAAO0B,SAAUlB,KAAKL,aAAce,GAAG,SAASS,KAAK,cAGxH,sBAAKT,GAAG,cAAR,UACI,uBAAOC,IAAI,UAAX,gCAGA,qBAAKD,GAAG,UAAUU,wBAAyBpB,KAAKF,8B,GA9C9BuB,aAsDhC5B,EAAW,ghBC/CF6B,MARf,WACE,OACE,qBAAKV,UAAU,MAAf,SACE,cAAC,EAAD,OCKSW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.19d8e315.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\r\nimport marked from 'marked';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowMaximize, faWindowMinimize } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default class Markdown extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            input: placeholder,\r\n            display: true\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.toggleDisplay = this.toggleDisplay.bind(this);\r\n        this.getMarkdownText = this.getMarkdownText.bind(this);\r\n    }\r\n    handleChange(event) {\r\n        this.setState({\r\n            input: event.target.value\r\n        })\r\n    }\r\n    toggleDisplay() {\r\n        this.setState(state => ({\r\n            display: !state.display\r\n        }));\r\n    }\r\n    getMarkdownText() {\r\n        var rawMarkup = marked(this.state.input, {sanitize: true});\r\n        marked.setOptions({\r\n            breaks: true\r\n          })\r\n        return { __html: rawMarkup };\r\n      }\r\n    render() {\r\n        return (\r\n            <div id=\"markdown-div\">\r\n                <div id=\"editor-div\">\r\n                    <label for=\"editor\">\r\n                        Markdown Editor\r\n                            {this.state.display ? \r\n                            <FontAwesomeIcon className=\"icon\" icon={faWindowMinimize}  onClick={this.toggleDisplay}/>\r\n                            : <FontAwesomeIcon className=\"icon\" icon={faWindowMaximize}  onClick={this.toggleDisplay}/>\r\n                            }\r\n                    </label>\r\n                    {this.state.display && <textarea type=\"text\" value={this.state.input} onChange={this.handleChange} id=\"editor\" name=\"editor\">\r\n                    </textarea>}\r\n                </div>\r\n                <div id=\"preview-div\">\r\n                    <label for=\"preview\">\r\n                        Markdown Previewer\r\n                    </label>\r\n                    <div id=\"preview\" dangerouslySetInnerHTML={this.getMarkdownText()}>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst placeholder = `# Hi, welcome to my Markdown Previewer! \r\n\r\n## This is the second heading\r\n\r\n**Bold text**\r\n\r\nThere are also [links](https://www.google.com)!\r\n\r\nHere is some code \\`<div></div>\\`\r\n\r\nFor a multi-line code, use \r\n\\`\\`\\` \r\n'\\`\\`\\`' at the beginning and '\\`\\`\\`' at the end!\r\n\\`\\`\\`\r\n\r\nHere is a\r\n> Block Quote\r\n\r\n[![Leaves Cover Photo](https://i.pinimg.com/originals/7a/a9/cc/7aa9cc0ee0e0c3a923a793e9e61dcc62.jpg)](https://br.pinterest.com/pin/AWYS096DrxqFc1ScwouxwpuanVJaKop09Dj5LIdS7VjftfKoMvhkoWc/)\r\n\r\n- List item 1\r\n    - List subitem 1\r\n`;","import logo from './logo.svg';\nimport './App.css';\nimport Markdown from './Markdown.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Markdown />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}